
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Install Netcool Operations Insight
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Get Config File
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
- name: PREREQUISITES -      üëì Load parameters
  include_vars: ../00_config_cp4waiops.yaml


- name: NOI -                üîê Copy Pull Secret from WAIOPS Namespace
  shell: |
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace={{ NOI_NAMESPACE }}
    oc create secret docker-registry 'ibm-aiops-pull-secret' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace={{ NOI_NAMESPACE }}
  ignore_errors: yes




# --------------------------------------------------------------------------------------------------------------------------------------
# Install Netcool Operations Insight
# --------------------------------------------------------------------------------------------------------------------------------------
# Create Namespace 
- name: NOI -                üöÄ Create Netcool namespace {{ NOI_NAMESPACE }}
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ NOI_NAMESPACE }}"
    state: present






# Create NOI Catalog
- name: NOI -                üöÄ Install Catalog
  community.kubernetes.k8s:
    state: present
    src: ./templates/noi/1_cat-ibm-noi.yaml



# Create NOI Operator Group
- name: NOI -                üöÄ Install Operator Group
  community.kubernetes.k8s:
    state: present
    template: ./templates/noi/2_group-ibm-noi.j2


# Create NOI Subscription
- name: NOI -                üöÄ Install Subscription
  community.kubernetes.k8s:
    state: present
    template: ./templates/noi/3_sub-ibm-noi.j2


- name: CHECK -              üï¶ Wait for CSV to become ready
  shell: |
    CSV_READY=$(oc get csv -n {{NOI_NAMESPACE}} | grep "Event Manager")
    echo $CSV_READY
  register: resource_ready
  until: ("Succeeded" in resource_ready.stdout)
  retries: 500
  delay: 15


# Create NOI Instance
- name: NOI -                üöÄ Install NOI
  community.kubernetes.k8s:
    state: present
    template: ./templates/noi/4_noi-install-template.j2




# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for NOI Namespace to be ready
# --------------------------------------------------------------------------------------------------------------------------------------

- name: CHECK -          üï¶ Wait for more than >{{NOI_NS_MIN_PODS_FINAL}} pods in namespace {{NOI_NAMESPACE}}
  shell: |
    NUM_PODS=$(oc get po -n {{NOI_NAMESPACE}} | wc -l)
    echo $NUM_PODS
  register: kubectl_num_pods
  until: kubectl_num_pods.stdout|int > {{NOI_NS_MIN_PODS_FINAL}}
  retries: 500
  delay: 15


- name: CHECK -          üï¶ Wait for WEBGUI to become ready
  shell: |
    WEBGUI_PODS=$(oc get po -n {{NOI_NAMESPACE}} | grep evtmanager-webgui-0)
    echo $WEBGUI_PODS
  register: kubectl_webgui_pods
  until: ("2/2" in kubectl_webgui_pods.stdout)
  retries: 500
  delay: 15






# --------------------------------------------------------------------------------------------------------------------------------------
# WAIOPS
# --------------------------------------------------------------------------------------------------------------------------------------
- name: LOGIN -  üöÄ WAIOPS Event Manager (NOI)
  shell: |
    echo "***************************************************************************************************************************************************"
    echo "***************************************************************************************************************************************************"
    echo "üöÄ Event Manager (Netcool Operations Insight) Connection Details"
    echo "***************************************************************************************************************************************************"
    echo "***************************************************************************************************************************************************"

    echo "---------------------------------------------------------------------------------------------"
    echo "    SMADMIN USER:"
    echo "        User:     smadmin"   
    echo "        Password: $(oc get secret -n {{NOI_NAMESPACE}} evtmanager-was-secret -o jsonpath='{.data.WAS_PASSWORD}'| base64 --decode && echo)"


    echo "---------------------------------------------------------------------------------------------"
    echo "---------------------------------------------------------------------------------------------"

    echo "    Netcool (NOI):"
    echo "        URL:     https://netcool-evtmanager.{{CLUSTER_NAME.stdout_lines[0]}}/"
  register: output_string
  ignore_errors: yes
- name: LOGIN -          üîê WAIOPS Event Manager (NOI)
  debug: 
    var: output_string.stdout_lines
  #when: PRINT_LOGINS == true



